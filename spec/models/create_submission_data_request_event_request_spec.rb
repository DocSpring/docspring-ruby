=begin
#DocSpring API

#DocSpring provides an API that helps you fill out and sign PDF templates.

The version of the OpenAPI document: v1

Generated by: https://openapi-generator.tech
Generator version: 7.11.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for DocSpring::CreateSubmissionDataRequestEventRequest
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe DocSpring::CreateSubmissionDataRequestEventRequest do
  let(:instance) { DocSpring::CreateSubmissionDataRequestEventRequest.new }

  describe 'test an instance of CreateSubmissionDataRequestEventRequest' do
    it 'should create an instance of CreateSubmissionDataRequestEventRequest' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(DocSpring::CreateSubmissionDataRequestEventRequest)
    end
  end

  describe 'test attribute "event_type"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["send_request", "view_request", "accepted_terms", "decline_request", "sign_request", "all_completed"])
      # validator.allowable_values.each do |value|
      #   expect { instance.event_type = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "message_type"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('String', ["email", "sms", "fax", "mail", "slack", "msteams", "discord", "telegram", "whatsapp"])
      # validator.allowable_values.each do |value|
      #   expect { instance.message_type = value }.not_to raise_error
      # end
    end
  end

end
